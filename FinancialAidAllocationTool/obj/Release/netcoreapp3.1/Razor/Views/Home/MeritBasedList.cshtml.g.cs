#pragma checksum "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3bc75b19f7bfa1c76b7649733b5a42ad80b6a754"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_MeritBasedList), @"mvc.1.0.view", @"/Views/Home/MeritBasedList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/_ViewImports.cshtml"
using FinancialAidAllocationTool;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/_ViewImports.cshtml"
using FinancialAidAllocationTool.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3bc75b19f7bfa1c76b7649733b5a42ad80b6a754", @"/Views/Home/MeritBasedList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"df650b1438e04e1d76f7e1f1a3e3493ff465c799", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_MeritBasedList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<FinancialAidAllocationTool.Models.FaatClassDefinition>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("50px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("50px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Images/pakistan-rupee-currency-symbol.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "MeritBasedClass", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
  
Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n \n\n\n");
#nullable restore
#line 11 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
 if(Model != null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("<div style=\"margin-top: 60px;margin-bottom: 80px;\">   \n  <h1 style=\"color: White;\">Merit Based Scholarship</h1>   \n<section> \n  <div");
            BeginWriteAttribute("style", " style=\"", 335, "\"", 343, 0);
            EndWriteAttribute();
            WriteLiteral(@">
<div class=""row"">
  <div class=""col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12"">
  <div class=""card border-left-success shadow h-100 py-2"">     
    <div class=""card-body"">
      <div class=""row no-gutters align-items-center"">
        <div class=""col mr-2"">
          <div class=""text-xs font-weight-bold text-success text-uppercase mb-1 DonationAccountStatus"">Balance (");
#nullable restore
#line 23 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
                                                                                                           Write(TempData["DonationAccountStatus"].ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral(")</div>\n          <div class=\"h5 mb-0 font-weight-bold text-gray-800 DonationAccountVal\">");
#nullable restore
#line 24 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
                                                                            Write(TempData["DonationAccountVal"].ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral("\n            </div>\n        </div>\n        <div class=\"col-auto\">      \n          ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3bc75b19f7bfa1c76b7649733b5a42ad80b6a7548434", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n        </div>\n      </div>        \n    </div>      \n  </div>\n  </div>\n  </div>\n\n  ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3bc75b19f7bfa1c76b7649733b5a42ad80b6a7549784", async() => {
                WriteLiteral("\n      ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("div", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3bc75b19f7bfa1c76b7649733b5a42ad80b6a75410044", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper);
#nullable restore
#line 37 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary = global::Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-summary", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("                        \n      <span class=\"text-danger ErrorMessage\">");
#nullable restore
#line 38 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
                                        Write(TempData["Error"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span>
         

           <div class=""row"">
             <div class=""col-lg-5 col-md-5 col-sm-5 col-xs-5 col-5"">
                    <input type=""text"" style =""background-color:#B0C4DE;""class=""form-control"" id=""myInput"" onkeyup=""myFunction()"" placeholder=""Search"" title=""Type in a name"">
             </div>
             <div class=""col-lg-7 col-md-7 col-sm-7 col-xs-7 col-7 pl-0"" style=""text-align: right;"">
            
");
#nullable restore
#line 47 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
             if(Model.Count > 0)
            {
              

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                    <button type=""submit"" name=""RejectAll"" value=""Reject All"" 
                      formaction=""/Home/RejectAllMeritBased"" formmethod=""post"" 
                      class=""btn btn-danger btn-sm"" style=""float:right;"">Reject All                  
                    </button>
");
                WriteLiteral(@"                    <button type=""submit"" name=""AcceptAll"" value=""Accept All"" 
                      formaction=""/Home/AcceptAllMeritBased"" formmethod=""post"" 
                      class=""btn btn-success btn-sm"" style=""float:right;""> Accept All                 
                    </button>
");
#nullable restore
#line 60 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
               
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            </div>\n             </div>\n             \n            <section id=\"myTable\">\n");
#nullable restore
#line 66 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
            foreach (var item in Model)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "3bc75b19f7bfa1c76b7649733b5a42ad80b6a75414167", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
#nullable restore
#line 68 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => item);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("for", __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("</partial>\n");
#nullable restore
#line 69 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            </section>\n           \n         \n                 \n  ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n  </div>\n</section>\n</div>\n");
#nullable restore
#line 78 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
}
else
{

#line default
#line hidden
#nullable disable
            WriteLiteral("  <p class=\"text-danger\">");
#nullable restore
#line 81 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
                    Write(TempData["Error"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\n");
#nullable restore
#line 82 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@" <div class=""modal fade"" tabindex=""-1"" role=""dialog"" id=""modal"">
  <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"" role=""document"">
    <div class=""modal-content"">
      <div class=""modal-header"">
        <h5 class=""modal-title"">Manual Student List</h5>
        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
          <span aria-hidden=""true"">&times;</span>
        </button>
      </div>
      <div class=""modal-body"">
           </div>
      <div class=""modal-footer"">
        
        <button type=""submit"" class=""btn btn-success"" form=""myform"">Submit</button>
        
        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" id=""closbtn"">Close</button>
      </div>
    </div>
  </div>
</div>

   


");
            DefineSection("Scripts", async() => {
                WriteLiteral("\n");
#nullable restore
#line 108 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
            }
            );
            WriteLiteral(@"

<script type=""text/javascript"">
 $(document).ready(function(){
  $('[data-toggle=""Reject""]').tooltip();   
});
 $(document).ready(function(){
  $('[data-toggle=""Accept""]').tooltip();   
});
 $(document).ready(function(){
  $('[data-toggle=""Manual""]').tooltip();   
});
$("".AcceptClass"").click(function (e) {
  var id = $(this).attr(""data"");
    
     var json = ");
#nullable restore
#line 125 "/home/muhammad/Projects/FinancialAidAllocationTool (4-sept-2020)   /FinancialAidAllocationTool/Views/Home/MeritBasedList.cshtml"
           Write(Html.Raw(Json.Serialize(@Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
     var obj = """";
     for(var i =0 ; i < Object.keys(json).length;i++)
     {
        if(json[i].id == id)
        {
          obj = json[i];
        }

     }
      console.log(obj);
       var a = [];
       var StdList = $(this).parent().parent().parent().next().find("".StdClass"");
       var b = $(this).parent().parent().parent().next().find("".StdClass"").find("".AllocationAmount"");
       for(var i=0;i<b.length;i++)
       {
            a.push($(this).parent().parent().parent().next().find("".StdClass"").find("".AllocationAmount"").val());
            console.log(b.eq(i).val());
       }
      

       
         for(var i =0 ; i < Object.keys(obj.faatScholarLog).length;i++)
     {
        
        
          obj.faatScholarLog[i].allocationAmount = b.eq(i).val();
        

     }
     console.log(obj);

      $.ajax
        ({
            url: ""/Home/AcceptMeritClass/"",     
            type: ""post"",
            dataType: ""json"",
            data: { ""Class"":JSON.stringify(obj) }, 
           
            su");
            WriteLiteral(@"ccess: function (result) 
            { 
              
              if (result.status === 'OK') {                                   
                  //window.location.href = result.url;
                  $("".DonationAccountStatus"").text(result.donationAccountStatus);
                  $("".DonationAccountVal"").text(result.donationAccountVal);
                  $("".ErrorMessage"").text('');
                   $(StdList).each(function(i)
                   {
                      $(this).css('background-color','#D9FEE5');
                       $(this).find('.Accept').each(function(j)
                       {
                             $(this).prop('disabled',true);
                             if($(this).find("".fa-ban"").length >0)
                             {
                               $(this).find("".fa-ban"").eq(0).attr(""hidden"",false);
                             }

                       }
                       
                       ) ; 
                       $(this).find('.Reject').each(funct");
            WriteLiteral(@"ion(k)
                       {

                              $(this).prop('disabled',false);
                              $(this).find("".fa-ban"").attr(""hidden"",true);
                       }
                       
                       );

                   }
                   );
                  
                   

                  
              }
              else if (result.status === 'Error') {                 
                $("".ErrorMessage"").text(result.message);                 
              }
              else {
                  //alert(""The status cannot be updated at this time"");
                  $("".ErrorMessage"").text(""The status cannot be updated at this time."");                 
              }   
            },
            error: function (response) {
              //alert(""error!"");  // 
              $("".ErrorMessage"").text(""Exception has been raised."");                 
            }
        });
        
        return false;
     
");
            WriteLiteral(@"    });

$("".ManualAdd"").click(function () {
       //console.log(""Modal"");
       var val = $(this).attr(""value"")
       console.log(val);
        $.ajax({
            
            url: ""/Home/ManualAddMerit/"",
            type: ""GET"",
             data: { ""id"":val },                
                success: function (result) {
                  //console.log(result);
                  $('.modal-body').empty();        
                  $('.modal-body').append(result);  
                    
                    $('#modal').modal('show');                   
                
            },
            error: function() {  
                    alert(""Content load failed."");  
                }  
        });
        return false;
    });
     $(""#closbtn"").click(function()  
        {  
             
            $('#modal').modal('hide');  
        });

");
            WriteLiteral("\nfunction myFunction() \n{\n    var input, filter, table, tr, td, i, txtValue;\n    input = document.getElementById(\"myInput\");\n    filter = input.value.toUpperCase();\n");
            WriteLiteral(@"    //Search Class
    var ClassFound = false;
    $( "".MainTable"" ).each(function( index ) 
    {            
        if ($( this ).find("".Cell"").first().text().toUpperCase().indexOf(filter) > -1) 
        {
            ClassFound = true;
            $( this ).css(""display"","""");
            $( this ).find("".NameCell"" ).each(function( index ) 
            {                       
                $( this ).closest(""li"").css(""display"","""");                
            });
        }
        else
        {
            $( this ).css(""display"",""none"");
        }
            
    });

    //Search Student Name
    //console.log(""ClassFound: "" + ClassFound);
    var StudentNameFound = false;    
    if(!ClassFound)
    {   
        $( "".MainTable"" ).each(function( index ) 
        {            
            $( this ).find("".NameCell"" ).each(function( index ) 
            {         
                var name = $( this ).text();               
                if (name.toUpperCase().indexOf(filter) > -1) 
                {");
            WriteLiteral(@"
                    //console.log($( this ).closest("".MainTable"").find("".Cell"").first().text());
                    //console.log(name);             
                    $( this ).closest("".MainTable"").css(""display"","""");
                    $( this ).closest(""li"").css(""display"","""");
                    StudentNameFound = true;
                }
                else
                {                    
                    $( this ).closest(""li"").css(""display"",""none"");
                }
            });    
        });
    }

    console.log(""ClassFound:"" + ClassFound);
    console.log(""StudentNameFound:"" + StudentNameFound);
    if(!ClassFound && !StudentNameFound)
    {
        $( "".MainTable"" ).each(function( index ) 
        {            
            $( this ).find("".AridNoCell"" ).each(function( index ) 
            {                   
                var arid_no = $( this ).text();               
                if (arid_no.toUpperCase().indexOf(filter) > -1) 
                {                    
     ");
            WriteLiteral(@"               $( this ).closest("".MainTable"").css(""display"","""");                    
                    $( this ).closest(""li"").css(""display"","""");
                }
                else
                {                    
                    $( this ).closest(""li"").css(""display"",""none"");
                }
            });    
        });
    }
}

    $("".Accept"").click(function (e) { 
             
        //alert('Accept');
        $.ajax
        ({
            url: ""/Home/AcceptMeritBased/"",     
            type: ""post"",
            data: 
            { 
              ""Arid_No"":$(this).attr('value'),
              ""AllocationAmount"":$(this).parent().parent().find("".amount"").find("".AllocationAmount"").val()
            },
            success: function (result) 
            { 
              console.log(result);
              if (result.status === 'OK') {                                   
                  //window.location.href = result.url;
                  $("".DonationAccountStatus"").text(result.donati");
            WriteLiteral(@"onAccountStatus);
                  $("".DonationAccountVal"").text(result.donationAccountVal);
                  $("".ErrorMessage"").text(''); 

                  $(e.target).parent().parent().parent().css('background-color','#D9FEE5');
                  $(e.target).parent().next().find('.Reject').prop('disabled',false); 
                  $(e.target).prop('disabled',true);
                  if($(e.target).find("".fa-ban"").length >0)
                  {
                  $(e.target).find("".fa-ban"").eq(0).attr(""hidden"",false);

                  }


                 
                $(e.target).parent().next().find('.Reject').find("".fa-ban"").attr(""hidden"",true);  

                  
              }
              else if (result.status === 'Error') {                 
                $("".ErrorMessage"").text(result.message);                 
              }
              else {
                  //alert(""The status cannot be updated at this time"");
                  $("".ErrorMessage"").text(""The status cannot be upd");
            WriteLiteral(@"ated at this time."");                 
              }   
            },
            error: function (response) {
              //alert(""error!"");  // 
              $("".ErrorMessage"").text(""Exception has been raised."");                 
            }
        });
        return false;
    });

    $("".Reject"").click(function (e) {
        
       

        //console.log($(this).closest(""tr"").find("".AllocationAmount"").val()); 
                 
        $.ajax
        ({
            url: ""/Home/RejectMeritBased/"",  
            type: ""post"",   
            data: 
            { 
              ""Arid_No"":$(this).attr('value'),
              ""AllocationAmount"":$(this).parent().parent().find("".amount"").find("".AllocationAmount"").val()
            },
            success: function (result) 
            {
              if (result.status === 'OK') {                                   
                  //window.location.href = result.url;
                  $("".DonationAccountStatus"").text(result.donationAccountStatus);
  ");
            WriteLiteral(@"                $("".DonationAccountVal"").text(result.donationAccountVal);
                  $("".ErrorMessage"").text('');
                  $(e.target).parent().parent().find('.AllocationAmount').val(0);
                  $(e.target).parent().parent().parent().css('background-color','#E9967A');
                 console.log($(this).parent().prev().find('.Accept')); 
                  
                  $(e.target).parent().prev().find('.Accept').prop('disabled',false); 
                  $(e.target).prop('disabled',true);
                  if($(e.target).find("".fa-ban"").length>0)
                  {
                   $(e.target).find("".fa-ban"").eq(0).attr(""hidden"",false);
                  }
        $(e.target).parent().prev().find('.Accept').find("".fa-ban"").attr(""hidden"",true);
              }
              else if (result.status === 'Error') {                 
                $("".ErrorMessage"").text(result.message);                 
              }
              else {
                  //alert(""The status c");
            WriteLiteral(@"annot be updated at this time"");
                  $("".ErrorMessage"").text(""The status cannot be updated at this time."");                 
              }   
            },
            error: function (response) {
              //alert(""error!"");  // 
              $("".ErrorMessage"").text(""Exception has been raised."");                 
            }
        });
        return false;
    });

    $(document).on('click', '.THead', function (e) {           
        $(this).parent().next('.TBody').toggleClass(""collapse"");
        
        return false;
    });

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<FinancialAidAllocationTool.Models.FaatClassDefinition>> Html { get; private set; }
    }
}
#pragma warning restore 1591
