#pragma checksum "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ed9071a40ec39bce473247fe4c87c80637327564"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_NeedBasedList), @"mvc.1.0.view", @"/Views/Home/NeedBasedList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\_ViewImports.cshtml"
using FinancialAidAllocationTool;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\_ViewImports.cshtml"
using FinancialAidAllocationTool.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ed9071a40ec39bce473247fe4c87c80637327564", @"/Views/Home/NeedBasedList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"df650b1438e04e1d76f7e1f1a3e3493ff465c799", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_NeedBasedList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<FinancialAidAllocationTool.Models.FaatClassDefinition>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("50px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("50px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Images/pakistan-rupee-currency-symbol.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "NeedBasedClass", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
  
Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 8 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
 if(Model!=null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div style=""margin-top: 60px;margin-bottom: 80px;"">      
<h1 style=""color: white;"">Need Based Scholarship</h1>
<div>
  <div class=""card border-left-success shadow h-100 py-2"">     
    <div class=""card-body"">
      <div class=""row no-gutters align-items-center"">
        <div class=""col mr-2"">
          <div class=""text-xs font-weight-bold text-success text-uppercase mb-1 DonationAccountStatus"">Balance (");
#nullable restore
#line 17 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
                                                                                                           Write(TempData["DonationAccountStatus"].ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral(")</div>\r\n          <div class=\"h5 mb-0 font-weight-bold text-gray-800 DonationAccountVal\">");
#nullable restore
#line 18 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
                                                                            Write(TempData["DonationAccountVal"].ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-auto\">      \r\n          ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ed9071a40ec39bce473247fe4c87c806373275647972", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n      </div>        \r\n    </div>      \r\n  </div>\r\n\r\n  ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed9071a40ec39bce473247fe4c87c806373275649331", async() => {
                WriteLiteral("\r\n      ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("div", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed9071a40ec39bce473247fe4c87c806373275649595", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper);
#nullable restore
#line 29 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary = global::Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-summary", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("                        \r\n      <span class=\"text-danger ErrorMessage\">");
#nullable restore
#line 30 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
                                        Write(TempData["Error"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span>
         

           <div class=""row"">
             <div class=""col-lg-6 col-md-6 col-sm-3 col-xs-6 col-6 pr-0"">
                  <input type=""text"" style =""background-color:#B0C4DE;""class=""form-control"" id=""myInput"" onkeyup=""myFunction()"" placeholder=""Search"" title=""Type in a name"">                  
             </div>
");
                WriteLiteral("             <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6 pl-1\" style=\"text-align: right;\">\r\n            \r\n            \r\n");
#nullable restore
#line 45 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
             if(Model.Count() > 0)
            {
              

#line default
#line hidden
#nullable disable
#nullable restore
#line 47 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
               if(User.IsInRole("Admin"))
              {
             

                

#line default
#line hidden
#nullable disable
                WriteLiteral("                  <button type=\"submit\" name=\"RejectAll\" value=\"Reject All\" \r\n                      formaction=\"/Home/RejectAllNeedBased\" formmethod=\"post\" \r\n                      class=\"btn btn-danger btn-sm RejectAll\" style=\"float: right;\" ");
#nullable restore
#line 54 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
                                                                                     if(Model.Where(e=>e.FaatScholarLog.Where(e=>e.Status=="Accept" || e.Status=="Reject").Count() == e.FaatScholarLog.Count()).Count()== Model.Count()){

#line default
#line hidden
#nullable disable
                WriteLiteral("disabled");
#nullable restore
#line 54 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
                                                                                                                                                                                                                                                              }

#line default
#line hidden
#nullable disable
                WriteLiteral(">Reject All                  \r\n                    </button>\r\n");
                WriteLiteral("                    <button type=\"submit\" name=\"AcceptAll\" value=\"Accept All\" \r\n                      formaction=\"/Home/AcceptAllNeedBased\" formmethod=\"post\" \r\n                      class=\"btn btn-success btn-sm AcceptAll\" style=\"float: right;\" ");
#nullable restore
#line 59 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
                                                                                      if(Model.Where(e=>e.FaatScholarLog.Where(e=>e.Status=="Accept" || e.Status=="Reject").Count() == e.FaatScholarLog.Count()).Count()== Model.Count()){

#line default
#line hidden
#nullable disable
                WriteLiteral("disabled");
#nullable restore
#line 59 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
                                                                                                                                                                                                                                                               }

#line default
#line hidden
#nullable disable
                WriteLiteral(" > Accept All                 \r\n                    </button>\r\n");
#nullable restore
#line 61 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
            
              }

#line default
#line hidden
#nullable disable
#nullable restore
#line 62 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
               
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("             </div>\r\n             </div>\r\n\r\n            <section id=\"myTable\">\r\n");
#nullable restore
#line 68 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
            foreach (var item in Model)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "ed9071a40ec39bce473247fe4c87c8063732756416272", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
#nullable restore
#line 70 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => item);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("for", __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("</partial>\r\n");
#nullable restore
#line 71 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("         </section>          \r\n  ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n  </div>\r\n\r\n</div>   \r\n");
#nullable restore
#line 77 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
}
else
{

#line default
#line hidden
#nullable disable
            WriteLiteral("  <p>");
#nullable restore
#line 80 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
Write(TempData["Error"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 81 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" role=""dialog"" id=""modal1"">
  <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"" role=""document"">
    <div class=""modal-content"">
      <div class=""modal-header"">
        <h5 class=""modal-title"">Manual Student List</h5>
        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
          <span aria-hidden=""true"">&times;</span>
        </button>
      </div>
      <div class=""modal-body"" id=""modal-body1"">
           </div>
      <div class=""modal-footer"" id=""modal-footer1"">
        
        <button type=""submit"" class=""btn btn-success"" form=""myform"">Submit</button>
        
        <button type=""button"" class=""btn btn-secondary closbtn"" data-dismiss=""modal"">Close</button>
      </div>
    </div>
  </div>
</div>

   

<div class=""modal fade"" tabindex=""-1"" role=""dialog"" id=""modal2"">
  <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"" role=""document"">
    <div class=""modal-content"">
");
            WriteLiteral(@"      <div class=""modal-header bg-success text-white"">
        <h5 class=""modal-title"">Recommendations</h5>
        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
          <span aria-hidden=""true"">&times;</span>
        </button>
      </div>
      <div class=""modal-body"" id=""modal-body2"">
           </div>
      <div class=""modal-footer"" id=""modal-footer2"">
");
#nullable restore
#line 117 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
         if(User.IsInRole("Committee"))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <button type=\"submit\" class=\"btn btn-success\" form=\"myform\">Submit</button>\r\n");
#nullable restore
#line 120 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <button type=""button"" class=""btn btn-secondary closbtn"" data-dismiss=""modal"">Close</button>
      </div>
    </div>
  </div>
</div>
<div class=""modal fade"" tabindex=""-1"" role=""dialog"" id=""modal3"">
  <div class=""modal-dialog modal-dialog-centered modal-xl modal-dialog-scrollable"" role=""document"">
    <div class=""modal-content"">
      <div class=""modal-header"" style=""border-bottom: none;"">
        <h6 class=""modal-title""> 
          <div class=""d-none d-xl-block d-lg-block"">
           <ul class=""nav nav-tabs SelectLG"" id=""myTab"" role=""tablist"">
                <li class=""nav-item"">
                  <a class=""nav-link active border border-primary border-bottom-0 select"" id=""Student-tab"" data-toggle=""tab"" href=""#StudentDetails"" role=""tab"" aria-controls=""StudentDetails"" aria-selected=""true"">Student Details</a>
                </li>
                <li class=""nav-item"">
                <a class=""nav-link border border-primary border-bottom-0 select"" id=""Parents-tab"" data-toggle=""tab"" href=");
            WriteLiteral(@"""#ParentDetails"" role=""tab"" aria-controls=""ParentDetails"" aria-selected=""false"">Parent Details</a>
                </li>
                <li class=""nav-item"">
                <a class=""nav-link border border-primary border-bottom-0 select"" id=""Residence-tab"" data-toggle=""tab"" href=""#ResidenceInfo"" role=""tab"" aria-controls=""ResidenceInfo"" aria-selected=""false"">Residence Info</a>
                </li>
                <li class=""nav-item"">
                <a class=""nav-link border border-primary border-bottom-0 select"" id=""Siblings-tab"" data-toggle=""tab"" href=""#SiblingInfo"" role=""tab"" aria-controls=""SiblingInfo"" aria-selected=""false"">Siblings Info</a>
                </li>
            </ul>
            </div>
         
            <div class=""dropdown d-md-block d-block d-xl-none d-lg-none"">
  <button type=""button"" class=""btn btn-secondary btn-md dropdown-toggle"" data-toggle=""dropdown"" onho>
    Select
  </button>
     <div class=""dropdown-menu"">
    <ul class=""SelectAll"" style=""list-style-type: ");
            WriteLiteral(@"none;margin: 0;padding: 0;"">
    <li class=""App"" style=""text-align: center;""><a class=""text-dark AppAct"" data-toggle=""tab"" href=""#StudentDetails"" role=""tab"" aria-controls=""StudentDetails"" aria-selected=""true"">Student Details</a></li>
     <div class=""dropdown-divider""></div>
    <li class=""App"" style=""text-align: center;""><a class=""text-dark AppAct"" data-toggle=""tab"" href=""#ParentDetails"" role=""tab"" aria-controls=""ParentDetails"" aria-selected=""true"">Parent Details</a></li>
     <div class=""dropdown-divider""></div>
    <li class=""App"" style=""text-align: center;""><a class=""text-dark AppAct"" data-toggle=""tab"" href=""#ResidenceInfo"" role=""tab"" aria-controls=""ResidenceInfo"" aria-selected=""true"">Residence Info</a></li>
     <div class=""dropdown-divider""></div>
    <li class=""App"" style=""text-align: center;""><a class=""text-dark AppAct"" data-toggle=""tab"" href=""#SiblingInfo"" role=""tab"" aria-controls=""SiblingInfo"" aria-selected=""true"">Sibling Info</a></li>
  </ul>
     </div>

</div>



             
   ");
            WriteLiteral(@"         
            </h6>
        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
          <span aria-hidden=""true"">&times;</span>
        </button>
      </div>
      <div class=""modal-body"" id=""modal-body3"">

           </div>
      <div class=""modal-footer"" id=""modal-footer3"">
        
       
        
        <button type=""button"" class=""btn btn-secondary closbtn"" data-dismiss=""modal"">Close</button>
      </div>
    </div>
  </div>
</div>
<div class=""modal fade"" tabindex=""-1"" role=""dialog"" id=""modal4"">
  <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable"" role=""document"">
    <div class=""modal-content"">
      <div class=""modal-header"">
        <h5 class=""modal-title""></h5>
        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
          <span aria-hidden=""true"">&times;</span>
        </button>
      </div>
      <div class=""modal-body"" id=""modal-body4"">
             <embed id=""img01"" height=""400px");
            WriteLiteral(@""" width=""400px"">
           </div>
      <div class=""modal-footer"" id=""modal-footer4"">
        
        
        <a href=""#"" class=""ZoomIn btn btn-primary""><i class=""fa fa-plus"" aria-hidden=""true""></i></a>
         <a href=""#"" class=""ZoomOut btn btn-primary""><i class=""fa fa-minus"" aria-hidden=""true""></i></a>
        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" id=""closbtn"">Close</button>
      </div>
    </div>
  </div>
</div>




");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 214 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
            }
            );
            WriteLiteral("\r\n\r\n<script type=\"text/javascript\">\r\n$(\".AcceptClass\").click(function (e) {\r\n  \r\n  var id = $(this).attr(\"data\");\r\n  var btn = $(this);\r\n    \r\n     var json = ");
#nullable restore
#line 224 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
           Write(Html.Raw(Json.Serialize(@Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
     var obj = """";
     for(var i =0 ; i < Object.keys(json).length;i++)
     {
        if(json[i].id == id)
        {
          obj = json[i];
        }

     }
      console.log(obj);
       var a = [];
       var StdList = $(this).parent().parent().parent().next().find("".StdClass"");
       var b = $(this).parent().parent().parent().next().find("".StdClass"").find("".AllocationAmount"");
       var status = $(this).parent().parent().parent().next().find("".StdClass"").find("".StdStatus"")
       var tid = $(this).parent().parent().parent().next().find("".StdClass"").find("".StdTid"")

       for(var i=0;i<b.length;i++)
       {
            a.push($(this).parent().parent().parent().next().find("".StdClass"").find("".AllocationAmount"").val());
            console.log(b.eq(i).val());
       }
      

       
         for(var i =0 ; i < Object.keys(obj.faatScholarLog).length;i++)
     {
        
        
          obj.faatScholarLog[i].allocationAmount = b.eq(i).val();
          obj.faatScholar");
            WriteLiteral(@"Log[i].Status = status.eq(i).val();
          obj.faatScholarLog[i].Tid = tid.eq(i).val();        

     }
     console.log(obj);

      $.ajax
        ({
            url: ""/Home/AcceptNeedClass/"",     
            type: ""post"",
            dataType: ""json"",
            data: { ""Class"":JSON.stringify(obj) }, 
           
            success: function (result) 
            { 
              
              if (result.status === 'OK') {                                   
                  //window.location.href = result.url;
                  $("".DonationAccountStatus"").text(result.donationAccountStatus);
                  $("".DonationAccountVal"").text(result.donationAccountVal);
                  $("".ErrorMessage"").text('');
                              $(btn).prop('disabled',true);
                           
                             $(btn).prev().prop('disabled',true);

                            
                   $(StdList).each(function(i)
                   {
            ");
            WriteLiteral(@"         var count = 0;
                     $(this).find('.StdTid').each(function(n)
                     {
                       
                       $(this).val(result.tid[count]);
                      
                       count = count + 1;
                     }
                     );
                      $(this).find('.StdStatus').each(function(m)
                      {
                        $(this).val(""Accept"");
                      }
                      );
                      $(this).css('background-color','#D9FEE5');
                       $(this).find('.Accept').each(function(j)
                       {
                             $(this).prop('disabled',true);
                             if($(this).find("".fa-ban"").length >1)
                             {
                               $(this).find("".fa-ban"").eq(0).attr(""hidden"",true);
                               $(this).find("".fa-ban"").eq(1).attr(""hidden"",false);

                             }
     ");
            WriteLiteral(@"                        else
                             {
                               $(this).find("".fa-ban"").eq(0).attr(""hidden"",false);
                             }

                       }
                       
                       ) ; 
                       $(this).find('.Reject').each(function(k)
                       {

                               $(this).prop('disabled',true);

                              if($(this).find("".fa-ban"").length >1)
                              {
                               $(this).find("".fa-ban"").eq(0).attr(""hidden"",true);
                               $(this).find("".fa-ban"").eq(1).attr(""hidden"",false);
  
                              }
                              else
                              {
                                $(this).find("".fa-ban"").eq(0).attr(""hidden"",false);
                              }
                       }
                       
                       );

                   }
           ");
            WriteLiteral(@"        );
                    var AllStatus = $('.StdStatus');
                  var Acheck = false;
                 
                    $(AllStatus).each(function(i)
                    {

                    if(AllStatus.eq(i).val() == ""Pending"")
                              {
                                      Acheck = true;
                              }

                    }
                    
                    
                    );
                if(Acheck == false)
                {
                  $('.AcceptAll').prop('disabled',true);
                  $('.RejectAll').prop('disabled',true);
                }

                  
                   

                  
              }
              else if (result.status === 'Error') {                 
                $("".ErrorMessage"").text(result.message);                 
              }
              else {
                  //alert(""The status cannot be updated at this time"");
                  $(""");
            WriteLiteral(@".ErrorMessage"").text(""The status cannot be updated at this time."");                 
              }   
            },
            error: function (response) {
              //alert(""error!"");  // 
              $("".ErrorMessage"").text(""Exception has been raised."");                 
            }
        });
        
        return false;
     
");
            WriteLiteral(@"    });
$("".RejectClass"").click(function (e) {
  var btn = $(this);
  var id = $(this).attr(""data"");
           var StdList = $(this).parent().parent().parent().next().find("".StdClass"");
       var status = $(this).parent().parent().parent().next().find("".StdClass"").find("".StdStatus"")

     var json = ");
#nullable restore
#line 401 "C:\Users\muham\Source\Repos\FinancialAidAllocationTool\FinancialAidAllocationTool\Views\Home\NeedBasedList.cshtml"
           Write(Html.Raw(Json.Serialize(@Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
     var obj = """";
     var tid = $(this).parent().parent().parent().next().find("".StdClass"").find("".StdTid"")

     for(var i =0 ; i < Object.keys(json).length;i++)
     {
        if(json[i].id == id)
        {
          obj = json[i];
        }

     }
              for(var i =0 ; i < Object.keys(obj.faatScholarLog).length;i++)
     {
        
        
       
          obj.faatScholarLog[i].Status = status.eq(i).val();
          obj.faatScholarLog[i].Tid = tid.eq(i).val();        

        

     }
      
      $.ajax
        ({
            url: ""/Home/RejectNeedClass/"",     
            type: ""post"",
            dataType: ""json"",
            data: { ""Class"":JSON.stringify(obj) }, 
           
            success: function (result) 
            { 
              
              if (result.status === 'OK') {                                   
                  //window.location.href = result.url;
                  $("".DonationAccountStatus"").text(result.donationAccountStat");
            WriteLiteral(@"us);
                  $("".DonationAccountVal"").text(result.donationAccountVal);
                  $("".ErrorMessage"").text('');
                             $(btn).prop('disabled',true);
                             
                             $(btn).next().prop('disabled',true);

                            
                   $(StdList).each(function(i)
                   {
                     var count = 0;
                     $(this).find('.StdTid').each(function(n)
                     {
                       if(result.tid[count] != null)
                       {
                       $(this).val(result.tid[count]);
                       
                       }//console.log(result.Tid[count].Tid);
                       count = count + 1;
                     }
                     );
                      $(this).find('.StdStatus').each(function(m)
                      {
                        $(this).val(""Reject"");
                      }
                      );
  ");
            WriteLiteral(@"                    $(this).css('background-color','#E9967A');
                       $(this).find('.Reject').each(function(j)
                       {
                             $(this).prop('disabled',true);
                             if($(this).find("".fa-ban"").length >1)
                             {
                                 $(this).find("".fa-ban"").eq(0).attr(""hidden"",true);
                               $(this).find("".fa-ban"").eq(1).attr(""hidden"",false);
                             }
                             else
                             {
                               $(this).find("".fa-ban"").eq(0).attr(""hidden"",false);
                             }
                            

                       }
                       
                       ) ; 
                       $(this).find('.Accept').each(function(k)
                       {

                              $(this).prop('disabled',true);

                              if($(this).find("".fa-ban""");
            WriteLiteral(@").length >1)
                              {
                                $(this).find("".fa-ban"").eq(0).attr(""hidden"",true);
                               $(this).find("".fa-ban"").eq(1).attr(""hidden"",false);
  
                              }
                              else
                              {
                                $(this).find("".fa-ban"").eq(0).attr(""hidden"",false);
                              }
                       }
                       
                       );
                       $(this).find('.AllocationAmount').each(function(l)
                       {
                             $(this).val(0);    

                       }
                       
                       );


                   }
                   );
                    var AllStatus = $('.StdStatus');
                  var Acheck = false;
                 
                    $(AllStatus).each(function(i)
                    {

                    if(AllStatus.eq(i).");
            WriteLiteral(@"val() == ""Pending"")
                              {
                                      Acheck = true;
                              }

                    }
                    
                    
                    );
                if(Acheck == false)
                {
                  $('.AcceptAll').prop('disabled',true);
                  $('.RejectAll').prop('disabled',true);
                }

                  
                   

                  
              }
              else if (result.status === 'Error') {                 
                $("".ErrorMessage"").text(result.message);                 
              }
              else {
                  //alert(""The status cannot be updated at this time"");
                  $("".ErrorMessage"").text(""The status cannot be updated at this time."");                 
              }   
            },
            error: function (response) {
              //alert(""error!"");  // 
              $("".ErrorMessage"").tex");
            WriteLiteral(@"t(""Exception has been raised."");                 
            }
        });
        
        return false;
     
  
    });

 function myFunction() 
{
    var input, filter, table, tr, td, i, txtValue;
    input = document.getElementById(""myInput"");
    filter = input.value.toUpperCase();
");
            WriteLiteral(@"    //Search Class
    var ClassFound = false;
    $( "".MainTable"" ).each(function( index ) 
    {            
        if ($( this ).find("".Cell"").first().text().toUpperCase().indexOf(filter) > -1) 
        {
            ClassFound = true;
            $( this ).css(""display"","""");
            $( this ).find("".NameCell"" ).each(function( index ) 
            {                       
                $( this ).closest(""li"").css(""display"","""");                
            });
        }
        else
        {
            $( this ).css(""display"",""none"");
        }
            
    });

    //Search Student Name
    //console.log(""ClassFound: "" + ClassFound);
    var StudentNameFound = false;    
    if(!ClassFound)
    {   
        $( "".MainTable"" ).each(function( index ) 
        {            
            $( this ).find("".NameCell"" ).each(function( index ) 
            {         
                var name = $( this ).text();               
                if (name.toUpperCase().indexOf(fi");
            WriteLiteral(@"lter) > -1) 
                {
                    //console.log($( this ).closest("".MainTable"").find("".Cell"").first().text());
                    //console.log(name);             
                    $( this ).closest("".MainTable"").css(""display"","""");
                    $( this ).closest(""li"").css(""display"","""");
                    StudentNameFound = true;
                }
                else
                {                    
                    $( this ).closest(""li"").css(""display"",""none"");
                }
            });    
        });
    }

    console.log(""ClassFound:"" + ClassFound);
    console.log(""StudentNameFound:"" + StudentNameFound);
    if(!ClassFound && !StudentNameFound)
    {
        $( "".MainTable"" ).each(function( index ) 
        {            
            $( this ).find("".AridNoCell"" ).each(function( index ) 
            {                   
                var arid_no = $( this ).text();               
                if (arid_no.toUpperCase().indexOf(fil");
            WriteLiteral(@"ter) > -1) 
                {                    
                    $( this ).closest("".MainTable"").css(""display"","""");                    
                    $( this ).closest(""li"").css(""display"","""");
                }
                else
                {                    
                    $( this ).closest(""li"").css(""display"",""none"");
                }
            });    
        });
    }
}
$(document).on('click', '.App', function (e) {   

$('.SelectAll li').each(function(i)
{     
   
      $(this).find("".AppAct"").removeClass(""active"");
      
       
});
$(this).find("".AppAct"").addClass(""active"");
}
);




$("".custom-select"").change(function(e){
    var option = $(this).find('option:selected');
    var id = option.val();
    e.preventDefault();
    $(id).tab('show');
});
 $(document).on('click', '.ImageView', function (e) {    
         
         
         var img = $(this).next();
         var modalImg = document.getElementById(""img01"");
       // var ca");
            WriteLiteral(@"ptionText = document.getElementById(""caption"");
      //   modal.style.display = ""block"";
      
      $('#modal4').modal('show'); 
         modalImg.src = img.attr('src');
         //captionText.innerHTML = this.alt;
        return false;
    });
    $(document).on('click', '.ZoomIn', function (e) {    
         
         
        
        
       // var captionText = document.getElementById(""caption"");
      //   modal.style.display = ""block"";
          $(""#img01"").width($(""#img01"").width()+5);
          $(""#img01"").height($(""#img01"").height()+5);
         //captionText.innerHTML = this.alt;
        return false;
    });
      $(document).on('click', '.ZoomOut', function (e) {    
         
         
        
        
       // var captionText = document.getElementById(""caption"");
      //   modal.style.display = ""block"";
           $(""#img01"").width($(""#img01"").width()-5);
           $(""#img01"").height($(""#img01"").height()-5);
         //captionText.innerHTML = this.alt;
     ");
            WriteLiteral(@"   return false;
    });



$(document).ready(function () {
    $("".ViewApp"").click(function() {
    // console.log($(this).parent().parent().next());
   //  var val=$(this).parent().parent().find("".VP"").attr('href');
   //  document.location.href = val;
      var val = $(this).parent().parent().find("".VP"").attr(""value"");
    $.ajax({
            
            url: ""/Home/ViewApplication/"",
            type: ""GET"",
             data: { ""id"":val },                
                success: function (result) {
                  //console.log(result);
                  $('#modal-body3').empty();        
                  $('#modal-body3').append(result);  
                    
                    $('#modal3').modal('show');                   
                
            },
            error: function() {  
                    alert(""Content load failed."");  
                }  
        });
        return false;
    
});
});

$("".ManualAdd"").click(function () {
       //console.lo");
            WriteLiteral(@"g(""Modal"");
       var val = $(this).attr(""value"")
      
        $.ajax({
            
            url: ""/Home/ManualAddNeed/"",
            type: ""GET"",
             data: { ""id"":val },                
                success: function (result) {
                  //console.log(result);
                  $('#modal-body1').empty();        
                  $('#modal-body1').append(result);  
                    
                    $('#modal1').modal('show');                   
                
            },
            error: function() {  
                    alert(""Content load failed."");  
                }  
        });
        return false;
    });
     $("".closbtn"").click(function()  
        {  
          $("".SelectLG"").find("".select"").each(function(i)
          {
             $(this).removeClass(""active"");    

          }
          
          );
           $("".SelectLG"").find("".select"").eq(0).addClass(""active"");


             $('#modal-body1').empty();
         ");
            WriteLiteral(@"    $('#modal-body2').empty();
            $('#modal1').modal('hide');  
            $('#modal2').modal('hide'); 
            $('#modal3').modal('hide');
             $('#modal4').modal('hide');
        });

        $("".close"").click(function()
        {
          $("".SelectLG"").find("".select"").each(function(i)
          {
             $(this).removeClass(""active"");    

          }
          
          );
           $("".SelectLG"").find("".select"").eq(0).addClass(""active"");


             $('#modal-body1').empty();
             $('#modal-body2').empty();
            $('#modal1').modal('hide');  
            $('#modal2').modal('hide'); 
            $('#modal3').modal('hide');
             $('#modal4').modal('hide');

        }
        );
 $("".Recommend"").click(function () {
       //console.log(""Modal"");
       var val = $(this).attr(""value"")
       console.log(val);
        $.ajax({
            
            url: ""/Home/AddComments/"",
            type: ""GET"",
             dat");
            WriteLiteral(@"a: { ""id"":val },                
                success: function (result) {
                  //console.log(result);
                  $('#modal-body2').empty();        
                  $('#modal-body2').append(result);  
                    
                    $('#modal2').modal('show');                   
                
            },
            error: function() {  
                    alert(""Content load failed."");  
                }  
        });
        return false;
    });
     

$(document).ready(function(){
  $('[data-toggle=""View""]').tooltip();   
});
$(document).ready(function(){
  $('[data-toggle=""Manual""]').tooltip();   
});
$(document).ready(function(){
  $('[data-toggle=""Accept""]').tooltip();   
});
$(document).ready(function(){
  $('[data-toggle=""Reject""]').tooltip();   
});

");
            WriteLiteral(@"function FilterByCGPA()
{
    var input, filter, table, tr, td, i, txtValue;
    input = document.getElementById(""parmCGPA"");
    filter = input.value;
    
    //Clear the other search field  
    document.getElementById(""myInput"").value = '';

    //Display all before performing the new search
    $( "".MainTable"" ).each(function( index ) 
    {            
        $( this ).css(""display"","""");
        $( this ).find("".CGPACell"" ).each(function( index )
        {
            $( this ).closest(""li"").css(""display"","""");
        });
    });

    //Hide all Classes    
    $( "".MainTable"" ).each(function( index ) 
    {            
        $( this ).css(""display"",""none"");
    });

    //Display the Filtered CGPA along with class
    console.log(""Filter: "" + parseFloat(filter));   
    var OneFound = false;       
    $( "".MainTable"" ).each(function( index ) 
    {            
        $( this ).find("".CGPACell"" ).each(function( index ) 
        {         
            var cgpa = $( th");
            WriteLiteral(@"is ).text();
            console.log(parseFloat(cgpa));              
            if (parseFloat(cgpa) >= parseFloat(filter)) 
            {   
                $( this ).closest("".MainTable"").css(""display"","""");
                $( this ).closest(""li"").css(""display"","""");                
                OneFound = true;
            }
            else
            {                    
                $( this ).closest(""li"").css(""display"",""none"");
            }
        });    
    });
    
    if(OneFound == false)
    {
        //Show all Classes and its students    
        $( "".MainTable"" ).each(function( index ) 
        {            
            $( this ).css(""display"","""");
            $( this ).find("".CGPACell"" ).each(function( index )
            {
                $( this ).closest(""li"").css(""display"","""");
            });
        });
    }

  }
      $("".Recommendations"").click(function(){ 
          var butval = $(this).val();
          $(""#ApplicationID"").val(butval);
     ");
            WriteLiteral(@"     $(""#myModal"").modal('show');
      });
    
 
    $("".Accept"").click(function (e) {        
        //alert('Accept');
      
       

        $.ajax
        ({
            url: ""/Home/AcceptNeedBased/"",     
            type: ""post"",
            data: 
            { 
              ""Arid_No"":$(this).attr('value'),
              ""AllocationAmount"":$(this).parent().parent().find("".amount"").find("".AllocationAmount"").val()
            },
            success: function (result) 
            { 
              console.log(result);
              if (result.status === 'OK') {                                   
                  //window.location.href = result.url;
                  $("".DonationAccountStatus"").text(result.donationAccountStatus);
                  $("".DonationAccountVal"").text(result.donationAccountVal);
                  $("".ErrorMessage"").text(''); 
                      $(e.target).parent().parent().parent().find('.StdTid').each(function(n)
                  {
         ");
            WriteLiteral(@"               $(this).val(result.tid);
                  }
                  
                  );
                   $(e.target).parent().parent().parent().find('.StdStatus').each(function(n)
                  {
                        $(this).val('Accept');
                  }
                  
                  );
                  var AllStatus = $('.StdStatus');
                  var Acheck = false;
                 
                    $(AllStatus).each(function(i)
                    {

                    if(AllStatus.eq(i).val() == ""Pending"")
                              {
                                      Acheck = true;
                              }

                    }
                    
                    
                    );
                if(Acheck == false)
                {
                  $('.AcceptAll').prop('disabled',true);
                   $('.RejectAll').prop('disabled',true);

                }

                 var statuses =  $(e.t");
            WriteLiteral(@"arget).parent().parent().parent().parent().find('.StdStatus');

                  var check = false;
                 
                    $(statuses).each(function(i)
                    {

                    if(statuses.eq(i).val() == ""Pending"")
                              {
                                      check = true;
                              }

                    }
                    
                    
                    );
                
                 if(check == false)
                 {
                       $(e.target).parent().parent().parent().parent().parent().prev().find('.AcceptClass').prop('disabled',true);
                      $(e.target).parent().parent().parent().parent().parent().prev().find('.RejectClass').prop('disabled',true);

                 }
     
                  $(e.target).parent().parent().parent().css('background-color','#D9FEE5'); 
                    $(e.target).parent().next().find('.Reject').prop('disabled',true); 
     ");
            WriteLiteral(@"             $(e.target).prop('disabled',true);
                      $(e.target).find("".fa-ban"").attr(""hidden"",false);
        $(e.target).parent().next().find('.Reject').find("".fa-ban"").attr(""hidden"",false);
              }
              else if (result.status === 'Error') {                 
                $("".ErrorMessage"").text(result.message);                 
              }
              else {
                  //alert(""The status cannot be updated at this time"");
                  $("".ErrorMessage"").text(""The status cannot be updated at this time."");                 
              }   
            },
            error: function (response) {
              //alert(""error!"");  // 
              $("".ErrorMessage"").text(""Exception has been raised."");                 
            }
        });
        return false;
    });

    $("".Reject"").click(function (e) {
             

        
        //console.log($(this).closest(""tr"").find("".AllocationAmount"").val()); 
        
        ");
            WriteLiteral(@"$.ajax
        ({
            url: ""/Home/RejectNeedBased/"",  
            type: ""post"",   
            data: 
            { 
              ""Arid_No"":$(this).attr('value'),
              ""AllocationAmount"":$(this).parent().parent().find("".amount"").find("".AllocationAmount"").val()
            },
            success: function (result) 
            {
              if (result.status === 'OK') {                                   
                  //window.location.href = result.url;
                  $("".DonationAccountStatus"").text(result.donationAccountStatus);
                  $("".DonationAccountVal"").text(result.donationAccountVal);
                  $("".ErrorMessage"").text('');
                      $(e.target).parent().parent().parent().find('.StdTid').each(function(n)
                  {
                        $(this).val(result.tid);
                  }
                  
                  );

                  $(e.target).parent().parent().parent().find('.StdStatus').each(function");
            WriteLiteral(@"(n)
                  {
                        $(this).val('Reject');
                  }
                  
                  );
                  var AllStatus = $('.StdStatus');
                  var Acheck = false;
                 
                    $(AllStatus).each(function(i)
                    {

                    if(AllStatus.eq(i).val() == ""Pending"")
                              {
                                      Acheck = true;
                              }

                    }
                    
                    
                    );
                if(Acheck == false)
                {
                  $('.AcceptAll').prop('disabled',true);
                  $('.RejectAll').prop('disabled',true);
                }


                  var statuses =  $(e.target).parent().parent().parent().parent().find('.StdStatus');

                     var check = false;
                     console.log(statuses);
                    $(statuses).each(funct");
            WriteLiteral(@"ion(i)
                    {
                      console.log(statuses.eq(i).val());

                    if(statuses.eq(i).val() == ""Pending"")
                              {
                                      check = true;
                              }

                    }
                    
                    
                    );
                
                 if(check == false)
                 {
                       $(e.target).parent().parent().parent().parent().parent().prev().find('.AcceptClass').prop('disabled',true);
                      $(e.target).parent().parent().parent().parent().parent().prev().find('.RejectClass').prop('disabled',true);

                 }
     
     
     




                  $(e.target).parent().parent().find('.AllocationAmount').val(0);
                 $(e.target).parent().parent().parent().css('background-color','#E9967A'); 
                 $(e.target).parent().prev().find('.Accept').prop('disabled',true);
            ");
            WriteLiteral(@"      $(e.target).prop('disabled',true);
                      $(e.target).find("".fa-ban"").attr(""hidden"",false);
        $(e.target).parent().prev().find('.Accept').find("".fa-ban"").attr(""hidden"",false);
              }
              else if (result.status === 'Error') {                 
                $("".ErrorMessage"").text(result.message);                 
              }
              else {
                  //alert(""The status cannot be updated at this time"");
                  $("".ErrorMessage"").text(""The status cannot be updated at this time."");                 
              }   
            },
            error: function (response) {
              //alert(""error!"");  // 
              $("".ErrorMessage"").text(""Exception has been raised."");                 
            }
        });
        return false;
    });

     $(document).on('click', '.THead', function (e) {           
        $(this).parent().next('.TBody').toggleClass(""collapse"");
        
        return false;
    })");
            WriteLiteral(";\r\n\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<FinancialAidAllocationTool.Models.FaatClassDefinition>> Html { get; private set; }
    }
}
#pragma warning restore 1591
